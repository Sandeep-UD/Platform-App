name: Sync Library Changes and PR on Conflict

on:
  push:
    branches: [main]
    paths:
      - 'Customer*/library/**'

  pull_request:
    branches: [main]
    paths:
      - 'Customer*/library/**'

jobs:
  sync-and-push:
    runs-on: ubuntu-latest
    env:
      LIBS_REPO: Rajesh-playground/Platform-Libs

    steps:
      - name: Checkout Platform-App
        uses: actions/checkout@v3
        with:
          path: platform-app
          fetch-depth: 2

      - name: Checkout Platform-Libs
        uses: actions/checkout@v3
        with:
          repository: ${{ env.LIBS_REPO }}
          token: ${{ secrets.GH_PAT }}
          path: platform-libs

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Detect and Sync Changes
        run: |
          cd platform-app
          git diff --name-only HEAD~1 HEAD > ../changed.txt
          git diff --diff-filter=D --name-only HEAD~1 HEAD > ../deleted.txt

          echo "üìÅ Changed files:"
          cat ../changed.txt || true

          updated_files=""
          while read -r file; do
            if [[ "$file" == Customer*/library/* ]]; then
              src_folder=$(echo "$file" | cut -d'/' -f1)
              relative_path="${file#*/library/}"
              src_file="$src_folder/library/$relative_path"

              for target in Customer*/; do
                target=${target%/}
                target_file="$target/library/$relative_path"
                if [[ "$target" != "$src_folder" && -f "$target_file" ]]; then
                  if ! cmp -s "$src_file" "$target_file"; then
                    cp "$src_file" "$target_file"
                    touch "$target_file"
                    updated_files="yes"
                  fi
                fi
              done
            fi
          done < ../changed.txt

          if [[ "$updated_files" == "yes" ]]; then
            git add .
            if ! git diff --cached --quiet; then
              git commit -m "Sync updated library files across customers"
            fi
          fi

      - name: Sync to Platform-Libs
        run: |
          cd platform-libs
          git checkout main

          cd ../platform-app
          for file in $(find Customer*/library/ -type f); do
            relative_path="${file#*/library/}"
            cp "$file" "../platform-libs/$relative_path"
          done

          cd ../platform-libs
          git add .
          git commit -m "Sync from Platform-App" || echo "No changes to commit"

      - name: Try Push to Platform-Libs
        id: try_push
        continue-on-error: true
        run: |
          cd platform-libs
          git push origin main

      - name: Create Pull Request on Conflict
        if: steps.try_push.outcome == 'failure'
        run: |
          echo "üõë Merge conflict detected! Creating a pull request..."
          cd platform-libs
          git checkout -b sync-conflict-fix-${{ github.run_id }}
          git push origin HEAD

          gh pr create \
            --title "üîÄ Conflict: Sync from Platform-App" \
            --body "This PR was auto-created due to merge conflicts while syncing from \`Platform-App\`. Please resolve manually.\
            @codeowners or responsible team, please review." \
            --base main \
            --head sync-conflict-fix-${{ github.run_id }}
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
