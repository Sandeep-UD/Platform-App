name: Sync Library Changes Across Folders and Push to Platform-Libs

on:
  push:
    branches:
      - main
    paths:
      - 'Folder*/library/**'

jobs:
  sync-libraries:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Platform-App
        uses: actions/checkout@v3
        with:
          path: platform-app
          fetch-depth: 2

      - name: Checkout Platform-Libs
        uses: actions/checkout@v3
        with:
          repository: Rajesh-playground/Platform-Libs
          token: ${{ secrets.GH_PAT }}
          path: platform-libs

      - name: Compare and Sync Library Files Across Folders (only if exists)
        run: |
          cd platform-app
          echo "üîÅ Detecting and syncing library changes..."
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch
          git checkout main
          git diff --name-only HEAD~1 HEAD > ../changed.txt
          echo "üìÅ Changed files:"
          cat ../changed.txt || true
          updated_files=""
          first_changed_folder=""
          while read -r file; do
            if [[ "$file" == Folder*/library/* ]]; then
              src_folder=$(echo "$file" | cut -d'/' -f1)
              filename=$(basename "$file")
              src_file="$src_folder/library/$filename"
              echo "üîç Checking $filename from $src_folder..."
              if [[ -z "$first_changed_folder" ]]; then
                first_changed_folder="$src_folder"
              fi
              for target in Folder*/; do
                target=${target%/}
                target_file="$target/library/$filename"
                if [[ "$target" != "$src_folder" && -f "$target_file" ]]; then
                  if ! cmp -s "$src_file" "$target_file"; then
                    cp "$src_file" "$target_file"
                    touch "$target_file"
                    echo "‚úÖ Synced $target_file"
                    updated_files="yes"
                  fi
                else
                  echo "‚è© Skipping $target_file (does not exist)"
                fi
              done
            fi
          done < ../changed.txt
          if [[ "$updated_files" == "yes" ]]; then
            git add .
            if ! git diff --cached --quiet; then
              echo "üîß Changes detected. Committing..."
              git commit -m "Synced existing library files across folders"
              git push origin main
            else
              echo "‚ö†Ô∏è Files copied but no actual git diff detected."
            fi
          else
            echo "üì≠ No library updates needed across folders."
          fi

            - name: Push updated files to Platform-Libs
              run: |
                echo "üì§ Copying latest library files from $first_changed_folder to Platform-Libs..."
                if [[ -z "$first_changed_folder" ]]; then
                  echo "‚ùå No changed folder detected, skipping push to Platform-Libs."
                  exit 0
                fi

                cp platform-app/$first_changed_folder/library/* platform-libs/ 2>/dev/null || {
                  echo "‚ö†Ô∏è No files copied. Skipping commit to Platform-Libs."
                  exit 0
                }

                cd platform-libs
                git config --global user.email "actions@github.com"
                git config --global user.name "GitHub Actions"

                echo "üìÑ Git status before commit:"
                git status

                git add .

                if ! git diff --cached --quiet; then
                  echo "‚úÖ Changes detected. Committing..."
                  git commit -m "Update shared library files from $first_changed_folder"
                  git push origin main
                else
                  echo "üì™ No updates to push to Platform-Libs."
                fi

